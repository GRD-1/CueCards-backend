version: '3.7'

services:
  node:
    image: 'cuecards-nodeimg-${NODE_ENV}'
    container_name: 'cuecards-node-${NODE_ENV}'
    restart: on-failure
    environment:
      - DOCKER_MODE=true
    build:
      context: ..
      dockerfile: 'docker/Dockerfile-${NODE_ENV}'
    ports:
      - '${NODE_PORT_EXTERNAL}:${NODE_PORT_INTERNAL}'
      - '${NODE_DEBUG_PORT_EXTERNAL}:${NODE_DEBUG_PORT_INTERNAL}'
    volumes:
      - ../src:/projectFiles/src
      - ../test:/projectFiles/test
      - ../env:/projectFiles/env
    depends_on:
      - postgres

  postgres:
    image: postgres:14
    container_name: 'cuecards-postgres-${NODE_ENV}'
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT_INTERNAL}'
    volumes:
      - '../db/${NODE_ENV}/data:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=cuecards_test_db
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test

  backup:
    build: .
    image: ghcr.io/mentos1386/postgres-cron-backup
    container_name: 'cuecards-postgres-backup-${NODE_ENV}'
    restart: unless-stopped
    volumes:
      - '../db/${NODE_ENV}/backup:/backup'
    environment:
      - POSTGRES_HOST=cuecards-postgres-${NODE_ENV}
      - MAX_BACKUPS=10
      - INIT_BACKUP=1
      - CRON_TIME=0 0 * * *
    depends_on:
      - postgres
